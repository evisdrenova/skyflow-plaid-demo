export declare enum RedactionType {
    DEFAULT = "DEFAULT",
    PLAIN_TEXT = "PLAIN_TEXT",
    MASKED = "MASKED",
    REDACTED = "REDACTED"
}
export declare enum RequestMethod {
    GET = "GET",
    POST = "POST",
    PUT = "PUT",
    PATCH = "PATCH",
    DELETE = "DELETE"
}
export declare enum LogLevel {
    WARN = "WARN",
    INFO = "INFO",
    DEBUG = "DEBUG",
    ERROR = "ERROR",
    NONE = "NONE"
}
export declare enum MessageType {
    LOG = "LOG",
    WARN = "WARN",
    ERROR = "ERROR"
}
export interface IInsertRecordInput {
    records: IInsertRecord[];
}
export interface IInsertRecord {
    table: string;
    fields: Record<string, any>;
}
export interface IRevealRecord {
    token: string;
    redaction?: RedactionType;
}
export interface IRevealResponseType {
    records?: Record<string, string>[];
    errors?: Record<string, any>[];
}
export interface IDetokenizeInput {
    records: IRevealRecord[];
}
export interface ISkyflowIdRecord {
    ids: string[];
    redaction: RedactionType;
    table: string;
}
export interface IGetByIdInput {
    records: ISkyflowIdRecord[];
}
export interface Context {
    logLevel: LogLevel;
}
export interface IConnectionConfig {
    connectionURL: string;
    methodName: RequestMethod;
    pathParams?: any;
    queryParams?: any;
    requestBody?: any;
    requestHeader?: any;
}
export declare const PUREJS_TYPES: {
    INSERT: string;
    DETOKENIZE: string;
    GET_BY_SKYFLOWID: string;
    INVOKE_CONNECTION: string;
};
