import { IRevealResponseType, IConnectionConfig, RequestMethod, IInsertRecordInput, IDetokenizeInput, IGetByIdInput, RedactionType, LogLevel } from './utils/common';
export interface ISkyflow {
    vaultID: string;
    vaultURL: string;
    getBearerToken: () => Promise<string>;
    options?: Record<string, any>;
}
declare class Skyflow {
    #private;
    constructor(config: ISkyflow);
    static init(config: ISkyflow): Skyflow;
    insert(records: IInsertRecordInput, options?: Record<string, any>): Promise<any>;
    detokenize(detokenizeInput: IDetokenizeInput): Promise<IRevealResponseType>;
    getById(getByIdInput: IGetByIdInput): Promise<unknown>;
    invokeConnection(config: IConnectionConfig): Promise<unknown>;
    static get RedactionType(): typeof RedactionType;
    static get RequestMethod(): typeof RequestMethod;
    static get LogLevel(): typeof LogLevel;
}
export default Skyflow;
